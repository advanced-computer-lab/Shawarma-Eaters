{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\This is My file\\\\ACL Task\\\\Project\\\\Shawarma-Eaters\\\\Shawarma-Eaters\\\\src\\\\components\\\\MasterForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Card, CardHeader, CardBody, CardTitle, CardText, CardFooter, CardImg, CardSubtitle } from \"reactstrap\";\nimport axios from 'axios';\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\nimport StepProgressBar from \"react-step-progress\"; // import the stylesheet\n\nimport \"react-step-progress/dist/index.css\";\nimport MultiStepProgressBar from \"./MultiStepProgressBar\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\nclass MasterForm extends Component {\n  constructor(props) {\n    super(props); // Set the intiial input values\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const selected_flight = this.state.selected_flight;\n      alert(\"Your Departure Flight detail: \\n \\n      Your Flight Number: \".concat(selected_flight.flight_number));\n    };\n\n    this.state = {\n      currentStep: 1,\n      flights: [],\n      selected_flight: {}\n    }; // Bind the submission to handleChange()\n\n    this.handleSelect = this.handleSelect.bind(this); // Bind new functions for next and previous\n\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  } // Use the submitted data to set the state\n\n\n  handleSelect(value) {\n    this.setState({\n      selected_flight: value\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/flights/').then(response => {\n      this.setState({\n        flights: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // Trigger an alert on form submission\n\n\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  _next() {\n    let currentStep = this.state.currentStep; // If the current step is 1 or 2, then add one on \"next\" button click\n\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep; // If the current step is 2 or 3, then subtract one on \"previous\" button click\n\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  } // The \"next\" and \"previous\" button functions\n\n\n  get previousButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 1, then render the \"previous\" button\n\n    if (currentStep !== 1) {\n      return React.createElement(Button, {\n        color: \"secondary float-left\",\n        onClick: this._prev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Previous\");\n    } // ...else return nothing\n\n\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 3, then render the \"next\" button\n\n    if (currentStep < 3) {\n      return React.createElement(Button, {\n        color: \"primary float-right\",\n        onClick: this._next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Next\");\n    } // ...else render nothing\n\n\n    return null;\n  }\n\n  get submitButton() {\n    let currentStep = this.state.currentStep; // If the current step is the last step, then render the \"submit\" button\n\n    if (currentStep > 2) {\n      return React.createElement(Button, {\n        color: \"primary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Submit\");\n    } // ...else render nothing\n\n\n    return null;\n  } //   step1Content() {\n  //     if (this.currentStep !== 1) {\n  //       return null;\n  //     }\n  //     return this.state.flights.map(currentflight => {\n  //       return (\n  //         <>\n  //       <p>Please select preferred departure time</p>\n  //       <FormGroup>\n  // <Card sx={{ maxWidth: 345 }}>\n  //     <CardImg\n  //       alt=\"Card image cap\"\n  //       src=\"../imgs/plane.jpg\"\n  //       top\n  //       width=\"100%\"\n  //     />\n  //     <CardBody>\n  //       <CardTitle tag=\"h5\">\n  //       Departure Flight\n  //       </CardTitle>\n  //       <CardSubtitle\n  //         className=\"mb-2 text-muted\"\n  //         tag=\"h6\"\n  //       >\n  //         Flight details:\n  //       </CardSubtitle>\n  //       <input className=\"e-input\" type=\"text\" placeholder=\"Flight Number:\" value={currentflight.flight_number } readOnly= {true}/>\n  //           <input className=\"e-input\" type=\"text\" placeholder=\"Departure:\" value={currentflight.departure} readOnly= {true}/>\n  //           <input className=\"e-input\" type=\"text\" placeholder=\"Economy seats:\" value={currentflight.number_of_Economy_seats} readOnly= {true}/>\n  //           <input className=\"e-input\" type=\"text\" placeholder=\"Business class seats:\" value={currentflight.number_of_Business_class_seats} readOnly= {true}/>\n  //           <Button size=\"small\" color=\"primary\" onClick={this.handleSelect(currentflight.flight_number)}>\n  //           Select\n  //         </Button>\n  //     </CardBody>\n  //   </Card>\n  //       </FormGroup>\n  //     </>\n  //       );\n  //     })\n  //   }\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Choose your departure and return flight\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MultiStepProgressBar, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(Step1, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Step2, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Step3, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.previousButton, this.nextButton, this.submitButton))));\n  }\n\n}\n\nexport default MasterForm;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\This is My file\\ACL Task\\Project\\Shawarma-Eaters\\Shawarma-Eaters\\src\\components\\MasterForm.js"],"names":["React","Component","Form","Button","Card","CardHeader","CardBody","CardTitle","CardText","CardFooter","CardImg","CardSubtitle","axios","Step1","Step2","Step3","StepProgressBar","MultiStepProgressBar","FormGroup","Label","Input","MasterForm","constructor","props","handleSubmit","event","preventDefault","selected_flight","state","alert","flight_number","currentStep","flights","handleSelect","bind","_next","_prev","value","setState","componentDidMount","get","then","response","data","catch","error","console","log","previousButton","nextButton","submitButton","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardFooter,\n  CardImg,\n  CardSubtitle\n} from \"reactstrap\";\n\nimport axios from 'axios';\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\n\nimport StepProgressBar from \"react-step-progress\";\n// import the stylesheet\nimport \"react-step-progress/dist/index.css\";\n\nimport MultiStepProgressBar from \"./MultiStepProgressBar\";\n\n\n\n\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\n\n\n\nclass MasterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // Set the intiial input values\n    this.state = {\n      currentStep: 1,\n      flights: [],\n      selected_flight: {}\n    };\n\n    // Bind the submission to handleChange()\n    this.handleSelect = this.handleSelect.bind(this);\n\n    // Bind new functions for next and previous\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  }\n\n  // Use the submitted data to set the state\n  handleSelect(value) {\n    this.setState({\n      selected_flight : value\n    });\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/flights/')\n      .then(response => {\n        this.setState({ flights: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n\n  // Trigger an alert on form submission\n  handleSubmit = event => {\n    event.preventDefault();\n    const { selected_flight} = this.state;\n    alert(`Your Departure Flight detail: \\n \n      Your Flight Number: ${selected_flight.flight_number}`);\n  };\n\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  _next() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep;\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  // The \"next\" and \"previous\" button functions\n  get previousButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is not 1, then render the \"previous\" button\n    if (currentStep !== 1) {\n      return (\n        <Button color=\"secondary float-left\" onClick={this._prev}>\n          Previous\n        </Button>\n      );\n    }\n\n    // ...else return nothing\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep;\n    // If the current step is not 3, then render the \"next\" button\n    if (currentStep < 3) {\n      return (\n        <Button color=\"primary float-right\" onClick={this._next}>\n          Next\n        </Button>\n      );\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  get submitButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is the last step, then render the \"submit\" button\n    if (currentStep > 2) {\n      return <Button color=\"primary float-right\">Submit</Button>;\n    }\n    // ...else render nothing\n    return null;\n  }\n\n//   step1Content() {\n    \n//     if (this.currentStep !== 1) {\n//       return null;\n//     }\n//     return this.state.flights.map(currentflight => {\n//       return (\n\n//         <>\n//       <p>Please select preferred departure time</p>\n//       <FormGroup>\n\n     \n// <Card sx={{ maxWidth: 345 }}>\n//     <CardImg\n//       alt=\"Card image cap\"\n//       src=\"../imgs/plane.jpg\"\n//       top\n//       width=\"100%\"\n//     />\n//     <CardBody>\n//       <CardTitle tag=\"h5\">\n//       Departure Flight\n//       </CardTitle>\n//       <CardSubtitle\n//         className=\"mb-2 text-muted\"\n//         tag=\"h6\"\n//       >\n//         Flight details:\n//       </CardSubtitle>\n//       <input className=\"e-input\" type=\"text\" placeholder=\"Flight Number:\" value={currentflight.flight_number } readOnly= {true}/>\n//           <input className=\"e-input\" type=\"text\" placeholder=\"Departure:\" value={currentflight.departure} readOnly= {true}/>\n//           <input className=\"e-input\" type=\"text\" placeholder=\"Economy seats:\" value={currentflight.number_of_Economy_seats} readOnly= {true}/>\n//           <input className=\"e-input\" type=\"text\" placeholder=\"Business class seats:\" value={currentflight.number_of_Business_class_seats} readOnly= {true}/>\n//           <Button size=\"small\" color=\"primary\" onClick={this.handleSelect(currentflight.flight_number)}>\n//           Select\n//         </Button>\n//     </CardBody>\n//   </Card>\n     \n//       </FormGroup>\n//     </>\n\n//       );\n//     })\n//   }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmit}>\n          <Card>\n            <CardHeader>Choose your departure and return flight</CardHeader>\n            <CardBody>\n              <CardTitle>\n                <MultiStepProgressBar currentStep={this.state.currentStep} />\n              </CardTitle>\n\n              <Step1\n              \n                currentStep={this.state.currentStep}\n\n               \n              />\n              <Step2\n                currentStep={this.state.currentStep}\n\n               \n              />\n              <Step3\n                currentStep={this.state.currentStep}\n               \n              />\n            </CardBody>\n            <CardFooter>\n              {this.previousButton}\n              {this.nextButton}\n              {this.submitButton}\n            </CardFooter>\n          </Card>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default MasterForm;\n"]},"metadata":{},"sourceType":"module"}