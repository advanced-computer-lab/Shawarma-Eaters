{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\This is My file\\\\ACL Task\\\\Project\\\\Shawarma-Eaters\\\\Shawarma-Eaters\\\\src\\\\components\\\\MasterForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Card, CardHeader, CardBody, CardTitle, CardText, CardFooter, CardImg, CardSubtitle } from \"reactstrap\";\nimport axios from 'axios';\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\nimport StepProgressBar from \"react-step-progress\"; // import the stylesheet\n\nimport \"react-step-progress/dist/index.css\";\nimport MultiStepProgressBar from \"./MultiStepProgressBar\";\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\nclass MasterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const selected_flight = this.state.selected_flight;\n      alert(\"Your Departure Flight detail: \\n \\n      Your Flight Number: \".concat(selected_flight.flight_number));\n    };\n\n    let selected = new Boolean(false); // Set the intiial input values\n\n    this.state = {\n      currentStep: 1,\n      flights: [],\n      selected_flight: 0\n    }; // Bind the submission to handleChange()\n\n    this.handleSelect = this.handleSelect.bind(this); // Bind new functions for next and previous\n\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  } // Use the submitted data to set the state\n\n\n  handleSelect(value) {\n    if (!selected) {\n      this.setState({\n        selected_flight: value\n      });\n      sel;\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/flights/').then(response => {\n      this.setState({\n        flights: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(this.state.flights);\n  } // Trigger an alert on form submission\n\n\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  _next() {\n    let currentStep = this.state.currentStep; // If the current step is 1 or 2, then add one on \"next\" button click\n\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep; // If the current step is 2 or 3, then subtract one on \"previous\" button click\n\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  } // The \"next\" and \"previous\" button functions\n\n\n  get previousButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 1, then render the \"previous\" button\n\n    if (currentStep !== 1) {\n      return React.createElement(Button, {\n        color: \"secondary float-left\",\n        onClick: this._prev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Previous\");\n    } // ...else return nothing\n\n\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep; // If the current step is not 3, then render the \"next\" button\n\n    if (currentStep < 3) {\n      return React.createElement(Button, {\n        color: \"primary float-right\",\n        onClick: this._next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Next\");\n    } // ...else render nothing\n\n\n    return null;\n  }\n\n  get submitButton() {\n    let currentStep = this.state.currentStep; // If the current step is the last step, then render the \"submit\" button\n\n    if (currentStep > 2) {\n      return React.createElement(Button, {\n        color: \"primary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Submit\");\n    } // ...else render nothing\n\n\n    return null;\n  }\n\n  step1Content() {\n    if (this.state.currentStep !== 1) {\n      console.log(\"Step 1\");\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Please select prefered departure time\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.flights.map(currentflight => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: \"../imgs/plane.jpg\",\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      tag: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Departure Flight\"), React.createElement(CardSubtitle, {\n      className: \"mb-2 text-muted\",\n      tag: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Flight details:\"), React.createElement(\"input\", {\n      className: \"e-input\",\n      type: \"text\",\n      placeholder: \"Flight Number:\",\n      value: currentflight.flight_number,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"e-input\",\n      type: \"text\",\n      placeholder: \"Departure:\",\n      value: currentflight.departure,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"e-input\",\n      type: \"text\",\n      placeholder: \"Economy seats:\",\n      value: currentflight.number_of_Economy_seats,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"e-input\",\n      type: \"text\",\n      placeholder: \"Business class seats:\",\n      value: currentflight.number_of_Business_class_seats,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: this.handleSelect(currentflight.flight_number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Select\"))))));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Choose your departure and return flight\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(MultiStepProgressBar, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), this.step1Content(), React.createElement(Step2, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Step3, {\n      currentStep: this.state.currentStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.previousButton, this.nextButton, this.submitButton))));\n  }\n\n}\n\nexport default MasterForm;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\This is My file\\ACL Task\\Project\\Shawarma-Eaters\\Shawarma-Eaters\\src\\components\\MasterForm.js"],"names":["React","Component","Form","Button","Card","CardHeader","CardBody","CardTitle","CardText","CardFooter","CardImg","CardSubtitle","axios","Step1","Step2","Step3","StepProgressBar","MultiStepProgressBar","ErrorBoundary","FormGroup","Label","Input","MasterForm","constructor","props","handleSubmit","event","preventDefault","selected_flight","state","alert","flight_number","selected","Boolean","currentStep","flights","handleSelect","bind","_next","_prev","value","setState","sel","componentDidMount","get","then","response","data","catch","error","console","log","previousButton","nextButton","submitButton","step1Content","map","currentflight","departure","number_of_Economy_seats","number_of_Business_class_seats","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardFooter,\n  CardImg,\n  CardSubtitle\n} from \"reactstrap\";\n\nimport axios from 'axios';\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\n\nimport StepProgressBar from \"react-step-progress\";\n// import the stylesheet\nimport \"react-step-progress/dist/index.css\";\n\nimport MultiStepProgressBar from \"./MultiStepProgressBar\";\n\n\n\nimport {ErrorBoundary} from 'react-error-boundary'\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\n\n\n\nclass MasterForm extends Component {\n  constructor(props) {\n    super(props);\n    let selected = new Boolean(false);\n\n    // Set the intiial input values\n    this.state = {\n      currentStep: 1,\n      flights: [],\n      selected_flight: 0\n    };\n\n    // Bind the submission to handleChange()\n    this.handleSelect = this.handleSelect.bind(this);\n\n    // Bind new functions for next and previous\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  }\n\n  // Use the submitted data to set the state\n  handleSelect(value) {\n    if (!selected){\n      this.setState({\n        selected_flight : value\n      });\n      sel\n    }\n    \n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/flights/')\n      .then(response => {\n        this.setState({ flights: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n      console.log(this.state.flights);\n  }\n\n\n  // Trigger an alert on form submission\n  handleSubmit = event => {\n    event.preventDefault();\n    const { selected_flight} = this.state;\n    alert(`Your Departure Flight detail: \\n \n      Your Flight Number: ${selected_flight.flight_number}`);\n  };\n\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  _next() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep;\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  // The \"next\" and \"previous\" button functions\n  get previousButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is not 1, then render the \"previous\" button\n    if (currentStep !== 1) {\n      return (\n        <Button color=\"secondary float-left\" onClick={this._prev}>\n          Previous\n        </Button>\n      );\n    }\n\n    // ...else return nothing\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep;\n    // If the current step is not 3, then render the \"next\" button\n    if (currentStep < 3) {\n      return (\n        <Button color=\"primary float-right\" onClick={this._next}>\n          Next\n        </Button>\n      );\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  get submitButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is the last step, then render the \"submit\" button\n    if (currentStep > 2) {\n      return <Button color=\"primary float-right\">Submit</Button>;\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  step1Content() {\n    \n    if (this.state.currentStep !== 1) {\n      console.log(\"Step 1\");\n      return null;\n    }\n  \n    return (  \n    <div>\n      <p>Please select prefered departure time</p>\n      <FormGroup>\n\n  { this.state.flights.map(currentflight =>(\n      <Card>\n    <CardImg top width=\"100%\" src=\"../imgs/plane.jpg\" alt=\"Card image cap\" />\n    <CardBody>\n        <CardTitle tag=\"h5\">\n        Departure Flight\n        </CardTitle>\n        <CardSubtitle\n          className=\"mb-2 text-muted\"\n          tag=\"h6\"\n        >\n          Flight details:\n        </CardSubtitle>\n        <input className=\"e-input\" type=\"text\" placeholder=\"Flight Number:\" value={currentflight.flight_number } readOnly= {true}/>\n            <input className=\"e-input\" type=\"text\" placeholder=\"Departure:\" value={currentflight.departure} readOnly= {true}/>\n            <input className=\"e-input\" type=\"text\" placeholder=\"Economy seats:\" value={currentflight.number_of_Economy_seats} readOnly= {true}/>\n            <input className=\"e-input\" type=\"text\" placeholder=\"Business class seats:\" value={currentflight.number_of_Business_class_seats} readOnly= {true}/>\n            <Button size=\"small\" color=\"primary\" onClick={this.handleSelect(currentflight.flight_number)}>\n            Select\n          </Button>\n      </CardBody>\n      </Card>\n      )\n  )}\n        </FormGroup>\n      \n    </div>\n    \n    );\n  }\n\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmit}>\n          <Card>\n            <CardHeader>Choose your departure and return flight</CardHeader>\n            <CardBody>\n              <CardTitle>\n                <MultiStepProgressBar currentStep={this.state.currentStep} />\n              </CardTitle>\n              \n              {this.step1Content()}\n              \n              <Step2\n                currentStep={this.state.currentStep}\n\n               \n              />\n              <Step3\n                currentStep={this.state.currentStep}\n               \n              />\n            </CardBody>\n            <CardFooter>\n              {this.previousButton}\n              {this.nextButton}\n              {this.submitButton}\n            </CardFooter>\n          </Card>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default MasterForm;\n"]},"metadata":{},"sourceType":"module"}