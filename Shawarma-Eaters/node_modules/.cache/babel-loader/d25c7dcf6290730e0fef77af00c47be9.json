{"ast":null,"code":"import { useReducer, useState, useEffect, createElement } from 'react';\nvar styles = {\n  \"progress-bar-wrapper\": \"_53Ji7\",\n  \"step-progress-bar\": \"_1Lo2h\",\n  \"progress-step\": \"_2Jtxm\",\n  \"step-index\": \"_2kL0S\",\n  \"step-icon\": \"_2JvrO\",\n  \"step-label\": \"_1hzhf\",\n  \"step-label-subtitle\": \"_1ixJ3\",\n  \"completed\": \"_2ZUAI\",\n  \"spring-down\": \"_3SDnc\",\n  \"current\": \"_35Ago\",\n  \"spring-up\": \"_JAh3L\",\n  \"has-error\": \"_1CcaK\",\n  \"shake\": \"_1ujce\",\n  \"step-content\": \"_2_g61\",\n  \"step-buttons\": \"_3uApM\",\n  \"step-action-btn\": \"_2pGos\",\n  \"action-btn-secondary\": \"_3CDiP\",\n  \"action-btn-primary\": \"_hsN1w\",\n  \"disabled\": \"_2RWmX\"\n};\nvar StepStates;\n\n(function (StepStates) {\n  StepStates[\"NOT_STARTED\"] = \"not_started\";\n  StepStates[\"CURRENT\"] = \"current\";\n  StepStates[\"ERROR\"] = \"error\";\n  StepStates[\"COMPLETED\"] = \"completed\";\n})(StepStates || (StepStates = {}));\n\nfunction stepsReducer(steps, action) {\n  return steps.map(function (step, i) {\n    if (i < action.payload.index) {\n      step.state = StepStates.COMPLETED;\n    } else if (i === action.payload.index) {\n      step.state = action.payload.state;\n    } else {\n      step.state = StepStates.NOT_STARTED;\n    }\n\n    return step;\n  });\n}\n\nfunction StepProgressBar(props) {\n  var steps = props.steps,\n      startingStep = props.startingStep,\n      wrapperClass = props.wrapperClass,\n      progressClass = props.progressClass,\n      stepClass = props.stepClass,\n      labelClass = props.labelClass,\n      subtitleClass = props.subtitleClass,\n      contentClass = props.contentClass,\n      buttonWrapperClass = props.buttonWrapperClass,\n      primaryBtnClass = props.primaryBtnClass,\n      secondaryBtnClass = props.secondaryBtnClass,\n      submitBtnName = props.submitBtnName,\n      onSubmit = props.onSubmit,\n      previousBtnName = props.previousBtnName,\n      nextBtnName = props.nextBtnName;\n\n  var _React$useReducer = useReducer(stepsReducer, steps),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var _React$useState = useState(startingStep),\n      currentIndex = _React$useState[0],\n      setCurrentIndex = _React$useState[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'init',\n      payload: {\n        index: currentIndex,\n        state: StepStates.CURRENT\n      }\n    });\n  }, []);\n\n  function submitHandler() {\n    onSubmit();\n  }\n\n  function nextHandler() {\n    if (currentIndex === steps.length - 1) {\n      return;\n    }\n\n    var isStateValid = true;\n    var stepValidator = state[currentIndex].validator;\n\n    if (stepValidator) {\n      isStateValid = stepValidator();\n    }\n\n    dispatch({\n      type: 'next',\n      payload: {\n        index: isStateValid ? currentIndex + 1 : currentIndex,\n        state: isStateValid ? StepStates.CURRENT : StepStates.ERROR\n      }\n    });\n\n    if (isStateValid) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  }\n\n  function prevHandler() {\n    if (currentIndex === 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'previous',\n      payload: {\n        index: currentIndex - 1,\n        state: StepStates.CURRENT\n      }\n    });\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  return createElement(\"div\", {\n    className: styles['progress-bar-wrapper'] + \" \" + (wrapperClass || '')\n  }, createElement(\"ul\", {\n    className: styles['step-progress-bar'] + \" \" + (progressClass || '')\n  }, state.map(function (step, i) {\n    return createElement(\"li\", {\n      key: i,\n      className: \"\" + styles['progress-step'] + (step.state === StepStates.COMPLETED ? \" \" + styles.completed : '') + (step.state === StepStates.CURRENT ? \" \" + styles.current : '') + (step.state === StepStates.ERROR ? \" \" + styles['has-error'] : '') + \" \" + (stepClass || '')\n    }, step.state === StepStates.COMPLETED && createElement(\"span\", {\n      className: styles['step-icon']\n    }, createElement(\"svg\", {\n      width: \"1.5rem\",\n      viewBox: \"0 0 13 9\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, createElement(\"path\", {\n      d: \"M1 3.5L4.5 7.5L12 1\",\n      stroke: \"white\",\n      strokeWidth: \"1.5\"\n    }))), step.state === StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-icon']\n    }, \"!\"), step.state !== StepStates.COMPLETED && step.state !== StepStates.ERROR && createElement(\"span\", {\n      className: styles['step-index']\n    }, i + 1), createElement(\"div\", {\n      className: styles['step-label'] + \" \" + (labelClass || '')\n    }, step.label, step.subtitle && createElement(\"div\", {\n      className: styles['step-label-subtitle'] + \" \" + (subtitleClass || '')\n    }, step.subtitle)));\n  })), createElement(\"div\", {\n    className: styles['step-content'] + \" \" + (contentClass || '')\n  }, state[currentIndex].content), createElement(\"div\", {\n    className: styles['step-buttons'] + \" \" + (buttonWrapperClass || '')\n  }, createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-secondary'] + \" \" + (currentIndex === 0 ? styles.disabled : '') + \" \" + (secondaryBtnClass || ''),\n    onClick: prevHandler\n  }, previousBtnName ? previousBtnName : 'Previous'), currentIndex === state.length - 1 ? createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-primary'] + \" \" + (primaryBtnClass || ''),\n    onClick: submitHandler\n  }, submitBtnName || 'Submit') : createElement(\"a\", {\n    className: styles['step-action-btn'] + \" \" + styles['action-btn-primary'] + \" \" + (primaryBtnClass || ''),\n    onClick: nextHandler\n  }, nextBtnName ? nextBtnName : 'Next')));\n}\n\nexport default StepProgressBar;","map":null,"metadata":{},"sourceType":"module"}