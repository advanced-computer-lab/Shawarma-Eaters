{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\This is My file\\\\ACL Task\\\\Project\\\\Shawarma-Eaters\\\\Shawarma-Eaters\\\\src\\\\components\\\\MultiStepProgressBar.js\";\nimport React from \"react\";\nimport \"./MultiStepProgressBar.css\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\n\nconst MultiStepProgressBar = props => {\n  var stepPercentage = 0;\n\n  if (props.currentStep === 1) {\n    stepPercentage = 0;\n  } else if (props.currentStep === 2) {\n    stepPercentage = 100 / 3;\n  } else if (props.currentStep === 3) {\n    stepPercentage = 2 * (100 / 3);\n  } else if (props.currentStep === 4) {\n    stepPercentage = 100;\n  } else {\n    stepPercentage = 0;\n  }\n\n  return React.createElement(ProgressBar, {\n    percent: stepPercentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    accomplished,\n    index\n  }) => React.createElement(\"div\", {\n    className: \"indexedStep \".concat(accomplished ? \"accomplished\" : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, index + 1)), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, ({\n    accomplished,\n    index\n  }) => React.createElement(\"div\", {\n    className: \"indexedStep \".concat(accomplished ? \"accomplished\" : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, index + 1)), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, ({\n    accomplished,\n    index\n  }) => React.createElement(\"div\", {\n    className: \"indexedStep \".concat(accomplished ? \"accomplished\" : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, index + 1)), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, ({\n    accomplished,\n    index\n  }) => React.createElement(\"div\", {\n    className: \"indexedStep \".concat(accomplished ? \"accomplished\" : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, index + 1)));\n};\n\nexport default MultiStepProgressBar;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\This is My file\\ACL Task\\Project\\Shawarma-Eaters\\Shawarma-Eaters\\src\\components\\MultiStepProgressBar.js"],"names":["React","ProgressBar","Step","MultiStepProgressBar","props","stepPercentage","currentStep","accomplished","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAO,oCAAP;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,yBAAlC;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,MAAIC,cAAc,GAAG,CAArB;;AAEA,MAAID,KAAK,CAACE,WAAN,KAAsB,CAA1B,EAA6B;AAC3BD,IAAAA,cAAc,GAAG,CAAjB;AACD,GAFD,MAEO,IAAID,KAAK,CAACE,WAAN,KAAsB,CAA1B,EAA6B;AAClCD,IAAAA,cAAc,GAAG,MAAI,CAArB;AACD,GAFM,MAEA,IAAID,KAAK,CAACE,WAAN,KAAsB,CAA1B,EAA6B;AAClCD,IAAAA,cAAc,GAAG,KAAG,MAAI,CAAP,CAAjB;AACD,GAFM,MAEA,IAAID,KAAK,CAACE,WAAN,KAAsB,CAA1B,EAA6B;AAClCD,IAAAA,cAAc,GAAG,GAAjB;AACD,GAFM,MAEA;AACLA,IAAAA,cAAc,GAAG,CAAjB;AACD;;AAED,SACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KACC;AACE,IAAA,SAAS,wBAAiBD,YAAY,GAAG,cAAH,GAAoB,IAAjD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,KAAK,GAAG,CAHX,CAFJ,CADF,EAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAED,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KACC;AACE,IAAA,SAAS,wBAAiBD,YAAY,GAAG,cAAH,GAAoB,IAAjD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,KAAK,GAAG,CAHX,CAFJ,CAVF,EAmBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAED,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KACC;AACE,IAAA,SAAS,wBAAiBD,YAAY,GAAG,cAAH,GAAoB,IAAjD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,KAAK,GAAG,CAHX,CAFJ,CAnBF,EA4BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAED,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KACC;AACE,IAAA,SAAS,wBAAiBD,YAAY,GAAG,cAAH,GAAoB,IAAjD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,KAAK,GAAG,CAHX,CAFJ,CA5BF,CADF;AAwCD,CAvDD;;AAyDA,eAAeL,oBAAf","sourcesContent":["import React from \"react\";\nimport \"./MultiStepProgressBar.css\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\n\nconst MultiStepProgressBar = props => {\n  var stepPercentage = 0;\n\n  if (props.currentStep === 1) {\n    stepPercentage = 0;\n  } else if (props.currentStep === 2) {\n    stepPercentage = 100/3;\n  } else if (props.currentStep === 3) {\n    stepPercentage = 2*(100/3);\n  } else if (props.currentStep === 4) {\n    stepPercentage = 100;\n  } else {\n    stepPercentage = 0;\n  }\n\n  return (\n    <ProgressBar percent={stepPercentage}>\n      <Step>\n        {({ accomplished, index }) => (\n          <div\n            className={`indexedStep ${accomplished ? \"accomplished\" : null}`}\n          >\n            {index + 1}\n          </div>\n        )}\n      </Step>\n      <Step>\n        {({ accomplished, index }) => (\n          <div\n            className={`indexedStep ${accomplished ? \"accomplished\" : null}`}\n          >\n            {index + 1}\n          </div>\n        )}\n      </Step>\n      <Step>\n        {({ accomplished, index }) => (\n          <div\n            className={`indexedStep ${accomplished ? \"accomplished\" : null}`}\n          >\n            {index + 1}\n          </div>\n        )}\n      </Step>\n      <Step>\n        {({ accomplished, index }) => (\n          <div\n            className={`indexedStep ${accomplished ? \"accomplished\" : null}`}\n          >\n            {index + 1}\n          </div>\n        )}\n      </Step>\n    </ProgressBar>\n  );\n};\n\nexport default MultiStepProgressBar;\n"]},"metadata":{},"sourceType":"module"}